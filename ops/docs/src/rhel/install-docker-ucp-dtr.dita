<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="install-docker-ucp-dtr">
<title>Installing Docker UCP and DTR on RHEL VMs</title>
<body>
  
<p>The following playbooks are used to Docker UCP and DTR on RHEL VMs.</p>    
  
<ul>

<li><codeph>playbooks/config_storage_driver.yml</codeph> prepares drives for local Docker volumes and container images. 
    It also configures Docker with either the <codeph>overlay2</codeph> storage driver (the default) or the 
    <codeph>devicemapper</codeph> storage driver, depending on the value of the <codeph>docker_storage_driver</codeph> variable
    in <codeph>group_vars/vars</codeph>. This playbook was previously called <codeph>playbooks/config_docker_lvs.yml</codeph>
    in earlier releases of the solution.
</li>  
  
  
<li><codeph>playbooks/install_docker.yml</codeph> installs Docker along with all of its dependencies.</li>


<li><codeph>playbooks/install_rsyslog.yml</codeph> installs and configures <b>rsyslog</b> in the logger node 
and in all Docker nodes. The logger node will be configured to receive all <codeph>syslogs</codeph> on port 514 and 
the Docker nodes will be configured to send all logs (including container logs) to the logger node.</li>

<!--<li><codeph>playbooks/config_docker_lvs.yml</codeph> performs a set of operations on the Docker nodes 
in order to create a partition on the second disk and carry out the LVM configuration, 
required for a sound Docker installation.</li>-->


<li><codeph>playbooks/docker_post_config.yml</codeph> performs a variety of tasks to complete 
the installation of the Docker environment, including configuration of the HTTP/HTTPS proxies, if any, 
and installation of the VMware vSphere Storage for Docker volume plugin.</li>


<li><codeph>playbooks/install_nfs_server.yml</codeph> installs and configures an NFS server on the NFS node.

<p>This playbook has been updated to configure a third drive which is used to hold the data of the persistent volumes 
created with the NFS provisioner. This default size for this drive is purposefully kept small because 
using the NFS VM to store persistent volumes is not recommended for production use. However, this can be useful for demo purposes.</p>
</li>


<li><codeph>playbooks/install_nfs_clients.yml</codeph> installs the required packages on the DTR nodes 
to be able to mount an NFS share.</li>


<li><codeph>playbooks/create_main_ucp.yml</codeph> installs and
configures the first Docker UCP instance on the target node
defined by the group <codeph>ucp_main</codeph> in the
<codeph>vm_hosts</codeph> inventory.</li>


<li><codeph>playbooks/scale_ucp.yml</codeph> installs and configures
additional instances of UCP on the target node defined by
the group <codeph>ucp</codeph> in the
<codeph>vm_hosts</codeph> inventory, except for the node defined in the group
<codeph>ucp_main</codeph>.</li>

	

<li><codeph>playbooks/create_main_dtr.yml</codeph> installs and
configures the first Docker DTR instance on the target nodes
defined by the group <codeph>dtr_main</codeph> in the <codeph>vm_hosts</codeph> inventory.</li>
  

<li><codeph>playbooks/config_scheduler.yml</codeph> configures the scheduler to prevent regular users 
(i.e. non-admin users) scheduling containers on the Docker nodes running instances of UCP and DTR.</li>
	

<li><codeph>playbooks/scale_dtr.yml</codeph> installs and configures additional instances (or replicas) 
of DTR on the target nodes defined by the group <codeph>dtr</codeph> in the <codeph>vm_hosts</codeph> inventory, 
with the exception of the node defined in the group <codeph>dtr_main</codeph>.</li>

	

<li><codeph>playbooks/reconfigure_dtr.yml</codeph>	is used to reconfigure DTR with the FQDN of the UCP Load Balancer and also 
enables image scanning.
</li>
  
  
  


</ul>
</body>
</topic>
